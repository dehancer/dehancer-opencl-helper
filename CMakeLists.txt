cmake_minimum_required(VERSION 3.12)

#
# Project
#
set (PROJECT_LIB dehancer_opencl_helper)
set (DEHANCER_OPENCL_VERSION 1)
option(BUILD_TESTING OFF)

project(${PROJECT_LIB} VERSION 0.0.1)

if (NOT CMAKE_INSTALL_LIBDIR)
    set(CMAKE_INSTALL_LIBDIR lib)
endif ()

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")

if(PRINT_DEBUG)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DPRINT_DEBUG=1")
endif()


if (WIN32)

    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -EHsc -Wno-deprecated-declarations")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
    add_definitions(/MT /DWIN32=1 /D_ITERATOR_DEBUG_LEVEL=0)
    string(TOLOWER  ${CMAKE_BUILD_TYPE} BUILD_TYPE)
    if (${BUILD_TYPE} STREQUAL "debug")
        add_definitions(/MTd /D_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH=1 /D_HAS_ITERATOR_DEBUGGING=0)
    endif()

    set(VCPKG_BUILD_TYPE release)
    set(VCPKG_LIBRARY_LINKAGE static)
    SET(NODEFAULTLIB_COMPILE_FLAGS "-Zl")
    SET(NODEFAULTLIB_LINK_FLAGS "")
    SET(VCPKG_C_FLAGS  "${VCPKG_C_FLAGS} ${NODEFAULTLIB_COMPILE_FLAGS}")
    SET(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} ${NODEFAULTLIB_LINK_FLAGS}" )

    find_package(dlfcn-win32 REQUIRED)

    set(CMAKE_DL_LIBS dlfcn-win32::dl)

    include_directories(
            ${dlfcn-win32_INCLUDE_DIRS}
    )

else()
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -rdynamic")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -Wno-unused-command-line-argument")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")

    set(CMAKE_DL_LIBS dl)
endif ()

set(CMAKE_MACOSX_RPATH TRUE)
SET(clHelper_DIR ${CMAKE_CURRENT_SOURCE_DIR}/clHelper)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
ADD_SUBDIRECTORY(${clHelper_DIR} clHelper_dir)

if (BUILD_TESTING)
    ADD_SUBDIRECTORY(examples)
endif ()
